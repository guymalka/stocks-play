{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/selectedquotes/selectedquotes.component.ts","./src/app/selectedquotes/selectedquotes.component.html","./src/app/app.module.ts","./src/app/stocks.gate.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { switchMap, debounceTime } from 'rxjs/operators';\nimport { of, fromEvent } from 'rxjs';\nimport { StocksGateService }from './stocks.gate.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  title = 'my-first-project';\n  public data: any;\n  public quote: string;\n  buttonSubscription\n  constructor(private elm: ElementRef, private service: StocksGateService ){}\n\n  /*\n  buttonClick() {\n\n    this.buttonSubscription =  fromEvent(this.button.nativeElement, 'click')\n        .pipe(debounceTime(3000))\n        .subscribe(res => console.log(res));\n  }\n  */\n  testservice(): void{\n    this.service.getstockbysibol(this.quote).subscribe(result =>\n      console.dir(result)\n    )\n    /*\n    this.service.getstocksdata().subscribe(result => {\n      this.data = result;\n    }, error => console.error(error));\n    */\n  }\n  ngOnInit(){\n\n    }\n}\n","<h2>stock market</h2>\n<div style=\"display: flex;\">\n  <div>\n    <div style=\"padding: 10px;\" ><input  type=\"text\"  [(ngModel)]='quote' /></div>\n    <button (click)=\"testservice()\" style=\"width: 100px;\"  >get quote data</button>\n  </div>\n  <div>\n    <app-selectedquotes></app-selectedquotes>\n  </div>\n</div>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-selectedquotes',\n  templateUrl: './selectedquotes.component.html',\n  styleUrls: ['./selectedquotes.component.scss']\n})\nexport class SelectedquotesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>selectedquotes works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SelectedquotesComponent } from './selectedquotes/selectedquotes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SelectedquotesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StocksGateService {\n  private baseurl: string = \"https://mobiledev.ordernet.co.il/api/\";\n  constructor(private  http: HttpClient)\n  {\n\n  }\n\n  getstocksdata() : Observable<any []>{\n    return this.http.get<any []>(`${this.baseurl}api/stocks?query=GO`);\n  }\n\n  getstockbysibol(quote: string) : Observable<any>{\n    return this.http.get<any>(`${this.baseurl}stocks?symbols=${quote}`)\n    .pipe(tap(item => console.log(item))\n      ,mergeMap(item => this.http.get(`${this.baseurl}stocks?symbols=GOOG&updateid=${item[0].UpdateId}`)));\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [ ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}